import{G as n}from"./GoogleCloudAuthPlugin-Df8JamBV.js";const r=0,a=1,l=2,h=3;class p{constructor({apiToken:e,assetId:i=null}){this.name="CESIUM_ION_AUTH_PLUGIN",this.apiToken=e,this.assetId=i,this.tiles=null,this._tileSetVersion=-1,this._tokenState=r,this._loadPromise=null}init(e){this.tiles=e}loadRootTileSet(e){if(this._tokenState===r){this._tokenState=a;let i;this.assetId===null?i=new URL(e):i=new URL(`https://api.cesium.com/v1/assets/${this.assetId}/endpoint`),i.searchParams.append("access_token",this.apiToken),this._loadPromise=fetch(i,{mode:"cors"}).then(t=>t.ok?t.json():Promise.reject(new Error(`${t.status} : ${t.statusText}`))).then(t=>{this._tokenState=l;const s=this.tiles;if("externalType"in t){const o=new URL(t.options.url);s.rootURL=t.options.url,s.getPluginByName("GOOGLE_CLOUD_AUTH_PLUGIN")||s.registerPlugin(new n({apiToken:o.searchParams.get("key")}))}else{const o=new URL(t.url);s.rootURL=t.url,o.searchParams.has("v")&&(this._tileSetVersion=o.searchParams.get("v"),s.fetchOptions.headers=s.fetchOptions.headers||{},s.fetchOptions.headers.Authorization=`Bearer ${t.accessToken}`)}return s.loadRootTileSet(s.rootURL)}).catch(t=>(this._tokenState=h,Promise.reject(t)))}return this._loadPromise}preprocessURL(e){return e=new URL(e),/^http/.test(e.protocol)&&this._tileSetVersion!=-1&&e.searchParams.append("v",this._tileSetVersion),e.toString()}}export{p as C};
